use super::Expr;

pub program -> Vec<Expr>
  = commands:(command*) { commands }

command -> Expr
  = c:add   { c }
  / c:sub   { c }
  / c:out   { c }
  / c:in    { c }
  / c:clear { c }
  / c:right { c }
  / c:left  { c }
  / c:loop  { c }

right -> Expr
  = commands:">"+ { Expr::Move(commands.len() as isize) }

left -> Expr
  = commands:"<"+ { Expr::Move(-(commands.len() as isize)) }

add -> Expr
  = commands:"+"+ { Expr::Add(commands.len() as i32, 0) }

sub -> Expr
  = commands:"-"+ { Expr::Add(-(commands.len() as i32), 0) }

clear -> Expr
  = "[-]" { Expr::Clear(0) }

out -> Expr
  = "." { Expr::Out(0) }

in -> Expr
  = "," { Expr::In(0) }

loop -> Expr
  =  "[" commands:command* "]" { Expr::Loop(commands) }
